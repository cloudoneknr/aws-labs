pipeline {
    agent any
    parameters {
        choice(
            name: 'BUILD_TYPE',
            choices: ['PLAN', 'APPLY', 'DESTROY'],
            description: 'Select The Build Type'
        )
    } 
    environment{
        AWS_DEFAULT_REGION='us-east-1'
        AWS_PROJECT_HOME='/Users/nrkodari/git-repos/aws-labs'
        C_PATH='/usr/local/bin/'
    }
    stages {
        stage('Terraform plan') {
            when {
                exxpression { params.BUILD_TYPE == 'PLAN'}
            }
            steps {
                sh '''
                    ${C_PATH}/terraform version
                    ${C_PATH}/tfenv list
                    ${C_PATH}/tfenv use 1.3.1
                    cd ${AWS_PROJECT_HOME}/networking/vpc
                    ${C_PATH}/terraform init
                    ${C_PATH}/terraform plan
                '''
            }
        }
        stage('Terraform apply') {
            when {
            exxpression { params.BUILD_TYPE == 'APPLY'}
            }
            steps {
                sh '''
                    ${C_PATH}/terraform version
                    ${C_PATH}/tfenv list
                    ${C_PATH}/tfenv use 1.3.1
                    cd ${AWS_PROJECT_HOME}/networking/vpc
                    ${C_PATH}/terraform init
                    ${C_PATH}/terraform ${params.BUILD_TYPE} -auto-approve
                '''
            }
        }
                stage('Terraform destroy') {
            when {
            exxpression { params.BUILD_TYPE == 'DESTROY'}
            }
            steps {
                sh '''
                    ${C_PATH}/terraform version
                    ${C_PATH}/tfenv list
                    ${C_PATH}/tfenv use 1.3.1
                    cd ${AWS_PROJECT_HOME}/networking/vpc
                    ${C_PATH}/terraform init
                    ${C_PATH}/terraform ${params.BUILD_TYPE} -auto-approve
                '''
            }
        }
    }  
}
